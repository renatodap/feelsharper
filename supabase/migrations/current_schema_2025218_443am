-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.activity_logs (
  user_id uuid NOT NULL,
  type text NOT NULL CHECK (type = ANY (ARRAY['weight'::text, 'food'::text, 'exercise'::text, 'mood'::text, 'energy'::text, 'sleep'::text, 'water'::text, 'unknown'::text])),
  data jsonb NOT NULL,
  raw_text text NOT NULL,
  confidence real CHECK (confidence >= 0::double precision AND confidence <= 1::double precision),
  metadata jsonb,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  parsed_data jsonb,
  auto_logged boolean DEFAULT false,
  ai_response text,
  timestamp timestamp with time zone DEFAULT now(),
  CONSTRAINT activity_logs_pkey PRIMARY KEY (id),
  CONSTRAINT activity_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.body_goals (
  user_id uuid NOT NULL,
  goal_type text NOT NULL CHECK (goal_type = ANY (ARRAY['weight_loss'::text, 'muscle_gain'::text, 'body_recomposition'::text, 'maintenance'::text, 'performance'::text])),
  target_weight_kg numeric,
  target_body_fat_percentage numeric,
  target_date date,
  weekly_target_kg numeric,
  notes text,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT body_goals_pkey PRIMARY KEY (id),
  CONSTRAINT body_goals_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.body_measurements (
  user_id uuid NOT NULL,
  weight_kg numeric,
  weight_lb numeric,
  body_fat_percentage numeric,
  muscle_mass_kg numeric,
  visceral_fat_level integer,
  water_percentage numeric,
  bone_mass_kg numeric,
  metabolic_age integer,
  waist_cm numeric,
  chest_cm numeric,
  arm_cm numeric,
  thigh_cm numeric,
  hip_cm numeric,
  neck_cm numeric,
  progress_photo_front text,
  progress_photo_side text,
  progress_photo_back text,
  notes text,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  measurement_date timestamp with time zone NOT NULL DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT body_measurements_pkey PRIMARY KEY (id),
  CONSTRAINT body_measurements_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.body_trends (
  user_id uuid NOT NULL,
  metric_type text NOT NULL CHECK (metric_type = ANY (ARRAY['weight'::text, 'body_fat'::text, 'muscle_mass'::text])),
  date date NOT NULL,
  value numeric NOT NULL,
  ema_7day numeric,
  ema_30day numeric,
  trend text CHECK (trend = ANY (ARRAY['increasing'::text, 'decreasing'::text, 'stable'::text])),
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT body_trends_pkey PRIMARY KEY (id),
  CONSTRAINT body_trends_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.custom_foods (
  sodium_mg numeric,
  barcode text,
  recipe_ingredients jsonb,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  serving_size numeric DEFAULT 100,
  serving_unit text DEFAULT 'g'::text,
  is_recipe boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  user_id uuid NOT NULL,
  name text NOT NULL,
  brand text,
  calories numeric,
  protein_g numeric,
  carbs_g numeric,
  fat_g numeric,
  fiber_g numeric,
  sugar_g numeric,
  CONSTRAINT custom_foods_pkey PRIMARY KEY (id),
  CONSTRAINT custom_foods_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.exercise_sets (
  distance_miles numeric,
  duration_seconds integer,
  rest_seconds integer,
  rpe integer CHECK (rpe >= 1 AND rpe <= 10),
  notes text,
  is_warmup boolean DEFAULT false,
  is_dropset boolean DEFAULT false,
  is_failure boolean DEFAULT false,
  workout_exercise_id uuid NOT NULL,
  reps integer,
  weight_kg numeric,
  weight_lb numeric,
  distance_km numeric,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  set_number integer NOT NULL DEFAULT 1,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT exercise_sets_pkey PRIMARY KEY (id),
  CONSTRAINT exercise_sets_workout_exercise_id_fkey FOREIGN KEY (workout_exercise_id) REFERENCES public.workout_exercises(id)
);
CREATE TABLE public.exercises (
  name text NOT NULL UNIQUE,
  category text NOT NULL,
  equipment text,
  muscle_group ARRAY,
  instructions text,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  is_compound boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT exercises_pkey PRIMARY KEY (id)
);
CREATE TABLE public.food_logs (
  user_id uuid,
  log_date date NOT NULL,
  meal_type text,
  food_name text,
  quantity_g numeric,
  calories numeric,
  protein_g numeric,
  carbs_g numeric,
  fat_g numeric,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  food_id text,
  quantity numeric,
  fiber_g numeric,
  sugar_g numeric,
  sodium_mg numeric,
  unit text DEFAULT 'g'::text,
  logged_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT food_logs_pkey PRIMARY KEY (id),
  CONSTRAINT food_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.foods (
  id text NOT NULL,
  name text NOT NULL,
  brand text,
  category text,
  calories numeric,
  protein_g numeric,
  carbs_g numeric,
  fat_g numeric,
  fiber_g numeric,
  sugar_g numeric,
  sodium_mg numeric,
  barcode text,
  serving_size numeric DEFAULT 100,
  serving_unit text DEFAULT 'g'::text,
  is_verified boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT foods_pkey PRIMARY KEY (id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  email text,
  full_name text,
  avatar_url text,
  age_range text,
  gender text,
  activity_level text,
  primary_goal text,
  secondary_goals jsonb,
  target_timeline text,
  motivation_styles jsonb,
  preferred_workout_time text,
  accountability_preference text,
  current_weight numeric,
  target_weight numeric,
  height numeric,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  body_fat_percentage numeric,
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.sleep_logs (
  user_id uuid,
  log_date date NOT NULL,
  hours numeric,
  quality integer,
  notes text,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT sleep_logs_pkey PRIMARY KEY (id),
  CONSTRAINT sleep_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.users (
  email text NOT NULL UNIQUE,
  name text,
  height_cm numeric,
  weight_kg numeric,
  age integer,
  gender text,
  goal text,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT users_pkey PRIMARY KEY (id)
);
CREATE TABLE public.workout_exercises (
  workout_id uuid NOT NULL,
  exercise_id uuid,
  exercise_name text NOT NULL,
  notes text,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  exercise_order integer NOT NULL DEFAULT 1,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT workout_exercises_pkey PRIMARY KEY (id),
  CONSTRAINT workout_exercises_workout_id_fkey FOREIGN KEY (workout_id) REFERENCES public.workouts(id),
  CONSTRAINT workout_exercises_exercise_id_fkey FOREIGN KEY (exercise_id) REFERENCES public.exercises(id)
);
CREATE TABLE public.workout_logs (
  user_id uuid,
  log_date date NOT NULL,
  workout_type text,
  exercise_name text,
  sets integer,
  reps integer,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  weight_kg numeric,
  duration_min numeric,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workout_logs_pkey PRIMARY KEY (id),
  CONSTRAINT workout_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.workouts (
  user_id uuid NOT NULL,
  name text NOT NULL,
  type text CHECK (type = ANY (ARRAY['strength'::text, 'cardio'::text, 'flexibility'::text, 'sports'::text, 'mixed'::text, 'other'::text])),
  duration_minutes integer,
  notes text,
  energy_level integer CHECK (energy_level >= 1 AND energy_level <= 10),
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  workout_date timestamp with time zone NOT NULL DEFAULT now(),
  completed boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workouts_pkey PRIMARY KEY (id),
  CONSTRAINT workouts_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);